Most Importantly line 19 in Functions.kt
Data Types:
    integer - whole number
    string -text
    double - decimal number
    Char - one character
    Boolean - true/false.
Variable Declaration:
    var a(name of the variable) :(data type i.e "Int, String, Double"- the data types must be sentence case; uppercase should start)
    var a = 23 ~this is without saying data type yet it will still identify it (hereby as integer)
        var is a dynamic type of variable declaration compared to val which is static type

    val z: Int
    y = 24
    val y: String
    x = "Yours Truly"

        with val a variable cannot be re-assigned i.e z = 35 will fail.
        the first is applied throughout; it is static

    Variable values:
    a = 23 ~if a was an integer

    Variable usage:
    println(a+another_var)

    var summation = a+b
    println(summation)

    var age: Int
    age = 18
    var height: Int
    height = 45
    println("Your age is $age and height is $height") ~ concatenation is by dollar sign before a variable name
        or
    println("Your age is " +age+ " and height is " +height) ~ concatenation as well
    output - Your age is 18 and height is 45

    and here is referred by &&
        i.e (age>0&&<18)
            println("You are a child")

    variable declaration
    when (variable name){
        value1 -> println(output)
        value2 -> println(output)
        value3 -> println(output)

        else -> println(output)
    }
Files are named using CamelCasing where phrases are written without spacing or punctuation but with capitalized words.

Taking Input from user and displaying output:
    print("Please enter your name: ") ~prints topic of input
    var enteredString = readLine() ~enables user type in data
    println("You have entered the string $enteredString") ~ displays output
    # by default all inputs are regarded as string #

    Use as integer
    print("Enter a number")
    var enteredNo = Integer.valueOf(readLine())
    println("The number entered is $enteredNo")
    ~This accepts only integer else error




    Scanner gives classes for conversion from one data type to another

Arrays to order the information you have in an orderly manner
inside maina
    arrayOf(data separated by commas: (2, 23.4, "John", 'w'))

    one to host only a certain data type:
    arrayOf<Int>(12, 24, 36) if any other is entered error
    General structure -> arrayOf<DataType>(value1, value2...)

    uniquely identified by a variable name
    var arr = arrayOf<Int>(12, 24, 36)

    modifying data within an array
    arr[2] = 35

    Or

    modifying array using set function
    println(arr[2]) -> 36
    arr.set(2, 35)
    println(arr[2]) -> 35

Range
    fun main() String{
        var <variable name> = firstValue..lastValue
        for(num in <variable name>){
            println(num)
        }

        // Using rangeTo
        var <name> = 1.rangeTo(5)
        for (num in <name>){
            println(num)
        }
        // steps
        var <name> = 1.rangeTo(5)
        var odd = <name>.step(2)
        for (x in odd){
            println(x)
        }
    }

Functions:
    Functions are declared using fun then named starting with lowercase, with a pair of brackets after.
        fun circleArea (): <datatype>{

        }
        ->here the data type is for the return.
    Arguments can be included in the function in brackets whose data types have to be specified.
        defaulted values:
            fun circleArea (pi: Double = 3.14, radius: double = 7.0): String{
                val area = pi*radius*radius
                val message = "The circle's area is: "
                return ("$message$area")
            }
        So that in main:
            fun main(){
                println(circleArea())
            }
        custom values to be entered in main function, here you only specify the data types:
            fun circleArea (pi: Double, radius: double): String{
                val area = pi*radius*radius
                val message = "The circle's area is: "
                return ("$message$area")
            }
        So that in main:
            fun main(){
                println(circleArea(`pi`3.14,`radius` 7.0))
            }
            ``means they will generate themselves from the application software in this case; intellij HENCE DO NOT KEY THEM IN

        The output in terminal will be similar


Syntax of creating a class using Kotlin:
    use the keyword class then the name of it beginning in uppercase:
        class <class name>{

        }